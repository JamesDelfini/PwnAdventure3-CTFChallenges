import struct

data = bytes.fromhex('''
            01000000 00000000 00 1000 477265617442616c6c734f664669726500872ac7000c5ac70000a14300000080000064000000
            6d6b 02000000 00000000 00 0c00 4c6f73744361766542757368002351c700d62cc70000b34300000000000064000000
            6d6b 03000000 00000000 00 0900 42656172436865737400b0f6c500e27b470070264523fde67f810064000000
            6d6b 04000000 00000000 00 0800 436f77436865737400fe764800a16fc80040924422fe088fc5fd64000000
            6d6b 05000000 00000000 00 0900 4c617661436865737400bc464700d8a3c50060be440000e338000064000000
            6d6b 06000000 00000000 00 0b00 426c6f636b79436865737400f03ec500bab34600300e45000000c0000064000000
            6d6b 07000000 00000000 00 0c00 47756e53686f704f776e6572005712c700048dc6000017450000ff7f000064000000
            6d6b 08000000 00000000 00 0f00 4a757374696e546f6c657261626c65007c20c700007ec600e00d450000aa6a000064000000
            6d6b 09000000 00000000 00 0600 4661726d65720062a84600102147005005450000e338000064000000
            6d6b 0a000000 00000000 00 0d00 4d69636861656c416e67656c6f                         c0277e48 c0ba72c8 00e0b044 0000c7510000 64000000
            6d6b 0b000000 00000000 00 0a00 476f6c64656e45676731                               00aac3c6 004a8d46 00008243 000000000000 64000000
            6d6b 0c000000 00000000 00 0a00 476f6c64656e45676732                               007249c7 001f6fc7 00e09c45 000000000000 64000000
            6d6b 0d000000 00000000 00 0a00 476f6c64656e45676733                               0080bf46 00198847 00302645 000000000000 64000000
            6d6b 0e000000 00000000 00 0a00 476f6c64656e45676734                               00256c47 000288c6 00b03745 000000000000 64000000
            6d6b 0f000000 00000000 00 0a00 476f6c64656e45676735                               0040be44 00d86946 0070db45 000000000000 64000000
            6d6b 10000000 00000000 00 0a00 476f6c64656e45676736                               00503546 002c4dc6 0080cd43 000000000000 64000000
            6d6b 11000000 00000000 00 0a00 476f6c64656e45676737                               80ed8dc7 003f51c7 00a0cd44 000000000000 64000000
            6d6b 12000000 00000000 00 0a00 476f6c64656e45676738                               00143d47 00aadb46 00003044 000000000000 64000000
            6d6b 13000000 00000000 00 0a00 476f6c64656e45676739                               00c97e47 0060b3c5 00009a45 000000000000 64000000
            6d6b 14000000 00000000 00 0e00 42616c6c6d65725065616b456767                       00a02dc5 006c2cc6 00202446 000000000000 64000000
            6d6b 15000000 00000000 00 1100 42616c6c6d65725065616b506f73746572                 00a8bec5 00302bc6 00302646 000000000000 64000000 e21800ffffffff
            6d6b dc130000 00000000 01 0800 4769616e74526174                                   1604b146 263f6a47 26242845 000000000000 1e000000
            6d6b dd130000 00000000 01 0800 4769616e74526174                                   b2efb446 75d85d47 7d7a3845 000000000000 1e000000
            6d6b de130000 00000000 01 0800 4769616e74526174                                   4e80d046 8b3f5347 79af2445 000000000000 1e000000
            6d6b df130000 00000000 01 0800 4769616e74526174                                   e569d546 059f6647 02272e45 000000000000 1e000000
            6d6b e0130000 00000000 01 0800 4769616e74526174                                   cab7f446 c5436a47 eee92845 000000000000 1e000000
            6d6b e1130000 00000000 01 0800 4769616e74526174                                   95a9ee46 43e08147 7a462f45 000000000000 1e000000
            6d6b e2130000 00000000 01 0800 4769616e74526174                                   462cb146 0fa58447 16df2245 000000000000 1e000000
            6d6b e3130000 00000000 01 0800 4769616e74526174                                   85179b46 627c6147 38104745 000000000000 1e000000
            7073 e2130000462cb1460fa5844716df2245000000000000000000000000
            7073 e313000085179b46627c614738104745000000000000000000000000
            7073 dd130000b2efb44675d85d477d7a3845000000000000000000000000
            7073 de1300004e80d0468b3f534779af2445000000000000000000000000
            7073 df130000e569d546059f664702272e45000000000000000000000000
            7073 e0130000cab7f446c5436a47eee92845000000000000000000000000
            7073 e113000095a9ee4643e081477a462f45000000000000000000000000
            7073 dc1300001604b146263f6a47262428450000000000000000000000000000
        ''')

newData = bytes.fromhex('6d6b') + data

actorInd = 0
while actorInd > -1:
    actor = b''

    # Skip 2B for the 0x6d6b actor id reference
    # Returns -1 if not found
    actorInd = newData[2:].find(bytes.fromhex('6d6b'))

    actor = newData[:actorInd]
    # Get all the rest of data when no more 0x6d6b
    if actorInd == -1:
        actor = newData[:]

    # Modifying the data starts here
    actorId, sId, isMob, nameLen = struct.unpack('<IIBH', actor[2:11+2])
    name = actor[11+2:11+2+nameLen]
    # print(hex(actorId), hex(sId), isMob, nameLen)
    print("Actor: %s" % name.decode('utf-8'))

    x, y, z = struct.unpack('<fff', actor[11+2+nameLen:11+2+nameLen+12])
    print(x, y, z)

    newData = newData[actorInd+2:]
